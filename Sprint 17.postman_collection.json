{
	"info": {
		"_postman_id": "3529406f-ba7c-416c-83b3-3e37692b6757",
		"name": "Sprint 17",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32799780"
	},
	"item": [
		{
			"name": "stats",
			"item": [
				{
					"name": "create hit 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Статус код должен быть 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"/events/1\",\n  \"ip\": \"121.0.0.1\",\n  \"timestamp\": \"2024-11-08 14:11:22\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9090/hit",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9090",
							"path": [
								"hit"
							]
						}
					},
					"response": []
				},
				{
					"name": "create hit 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Статус код должен быть 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"app\": \"ewm-main-service\",\n  \"uri\": \"/events/2\",\n  \"ip\": \"121.0.0.1\",\n  \"timestamp\": \"2024-11-08 14:11:22\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9090/hit",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9090",
							"path": [
								"hit"
							]
						}
					},
					"response": []
				},
				{
					"name": "get stats with uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Ответ в формате JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Поля app, uri и hits присутствуют в каждом объекте\", function () {",
									"    const jsonData = pm.response.json();",
									"    jsonData.forEach(hit => {",
									"        pm.expect(hit).to.have.property(\"app\");",
									"        pm.expect(hit).to.have.property(\"uri\");",
									"        pm.expect(hit).to.have.property(\"hits\");",
									"    });",
									"});",
									"",
									"pm.test(\"Сортировка по убыванию количества просмотров\", function () {",
									"    const jsonData = pm.response.json();",
									"    for (let i = 0; i < jsonData.length - 1; i++) {",
									"        pm.expect(jsonData[i].hits).to.be.at.least(jsonData[i + 1].hits);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9090/stats?start=2020-05-05 00:00:00&end=2035-05-05 00:00:00&uris=/events/1&uris=/events/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9090",
							"path": [
								"stats"
							],
							"query": [
								{
									"key": "start",
									"value": "2020-05-05 00:00:00"
								},
								{
									"key": "end",
									"value": "2035-05-05 00:00:00"
								},
								{
									"key": "uris",
									"value": "/events/1"
								},
								{
									"key": "uris",
									"value": "/events/2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get stats no uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"array\");",
									"});",
									"",
									"pm.test(\"Array items have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.forEach(function (item) {",
									"        pm.expect(item).to.have.property(\"app\");",
									"        pm.expect(item).to.have.property(\"uri\");",
									"        pm.expect(item).to.have.property(\"hits\");",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9090/stats?start=2022-09-01 00:00:00&end=2022-09-30 23:59:59",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9090",
							"path": [
								"stats"
							],
							"query": [
								{
									"key": "start",
									"value": "2022-09-01 00:00:00"
								},
								{
									"key": "end",
									"value": "2022-09-30 23:59:59"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get stats unique",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type is JSON\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"array\");",
									"});",
									"",
									"pm.test(\"Array items have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    jsonData.forEach(function (item) {",
									"        pm.expect(item).to.have.property(\"app\");",
									"        pm.expect(item).to.have.property(\"uri\");",
									"        pm.expect(item).to.have.property(\"hits\");",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:9090/stats?start=2022-09-01 00:00:00&end=2022-09-30 23:59:59&unique=true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9090",
							"path": [
								"stats"
							],
							"query": [
								{
									"key": "start",
									"value": "2022-09-01 00:00:00"
								},
								{
									"key": "end",
									"value": "2022-09-30 23:59:59"
								},
								{
									"key": "unique",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}